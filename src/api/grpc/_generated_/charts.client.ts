// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "charts.proto" (package "charts", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ChartService } from "./charts";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ChartDataList } from "./charts";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service charts.ChartService
 */
export interface IChartServiceClient {
    /**
     * @generated from protobuf rpc: GetChartData
     */
    getChartData(input: Empty, options?: RpcOptions): UnaryCall<Empty, ChartDataList>;
}
/**
 * @generated from protobuf service charts.ChartService
 */
export class ChartServiceClient implements IChartServiceClient, ServiceInfo {
    typeName = ChartService.typeName;
    methods = ChartService.methods;
    options = ChartService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetChartData
     */
    getChartData(input: Empty, options?: RpcOptions): UnaryCall<Empty, ChartDataList> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, ChartDataList>("unary", this._transport, method, opt, input);
    }
}
